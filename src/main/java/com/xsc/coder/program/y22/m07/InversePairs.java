package com.xsc.coder.program.y22.m07;

/**
 * 描述
 * 在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。并将P对1000000007取模的结果输出。 即输出P mod 1000000007
 * <p>
 * 数据范围：  对于 50\%50% 的数据, size\leq 10^4size≤10
 * 4
 * <p>
 * 对于 100\%100% 的数据, size\leq 10^5size≤10
 * 5
 * <p>
 * 数组中所有数字的值满足 0 \le val \le 10000000≤val≤1000000
 * <p>
 * 要求：空间复杂度 O(n)O(n)，时间复杂度 O(nlogn)O(nlogn)
 * 输入描述：
 * 题目保证输入的数组中没有的相同的数字
 * 示例1
 * 输入：
 * [1,2,3,4,5,6,7,0]
 * 复制
 * 返回值：
 * 7
 * 复制
 * 示例2
 * 输入：
 * [1,2,3]
 * 复制
 * 返回值：
 * 0
 *
 * @author xia
 * @date 2022/7/6 23:20
 */
public class InversePairs {

    public static int inversePairs(int[] array) {
        if (array.length <= 1) {
            return 0;
        }
        long tmp = 0L;
        for (int i = 1; i < array.length; i++) {
            long t = 0L;
            for (int j = 0; j < i; j++) {
                if (array[i] >= array[j]) {
                    continue;
                }
                t += 1;
            }
            tmp += t;
        }
        return (int) (tmp % 1000000007);
    }

    public static void main(String[] args) {
        int[] nums = {364, 637, 341, 406, 747, 995, 234, 971, 571, 219, 993, 407, 416, 366, 315, 301, 601, 650, 418, 355, 460, 505, 360, 965, 516, 648, 727, 667, 465, 849, 455, 181, 486, 149, 588, 233, 144, 174, 557, 67, 746, 550, 474, 162, 268, 142, 463, 221, 882, 576, 604, 739, 288, 569, 256, 936, 275, 401, 497, 82, 935, 983, 583, 523, 697, 478, 147, 795, 380, 973, 958, 115, 773, 870, 259, 655, 446, 863, 735, 784, 3, 671, 433, 630, 425, 930, 64, 266, 235, 187, 284, 665, 874, 80, 45, 848, 38, 811, 267, 575};
        System.out.println(inversePairs(nums));
    }
}
